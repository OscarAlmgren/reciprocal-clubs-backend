# =========================================================================
# Docker Compose - Development Environment
# =========================================================================
# This configuration is optimized for local development with:
# - Fast rebuilds and hot reloading
# - Development tools (MailHog, pgAdmin)
# - Simplified security settings
# - Debug-friendly configurations
# - Local volume mounts for development

version: '3.8'

networks:
  reciprocal-clubs-dev:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres_data_dev:
  nats_data_dev:
  redis_data_dev:
  fabric_peer_dev:
  fabric_orderer_dev:
  fabric_ca_dev:
  prometheus_data_dev:
  grafana_data_dev:

services:
  # =======================================================================
  # Infrastructure Services
  # =======================================================================

  postgres:
    image: postgres:15-alpine
    container_name: reciprocal-postgres-dev
    environment:
      POSTGRES_DB: reciprocal_clubs_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: devpassword
      POSTGRES_MULTIPLE_DATABASES: auth_service,member_service,analytics_service,reciprocal_service,blockchain_service,notification_service,governance_service
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./scripts/init-multiple-db.sql:/docker-entrypoint-initdb.d/init-multiple-db.sql
      - ./scripts/dev-seed-data.sql:/docker-entrypoint-initdb.d/99-dev-seed-data.sql
    networks:
      reciprocal-clubs-dev:
        ipv4_address: 172.20.0.10
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # PostgreSQL Admin Interface for Development
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: reciprocal-pgadmin-dev
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@reciprocal-clubs.dev
      PGADMIN_DEFAULT_PASSWORD: devpassword
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - ./config/pgadmin/servers.json:/pgadmin4/servers.json
    networks:
      - reciprocal-clubs-dev
    depends_on:
      - postgres

  redis:
    image: redis:7-alpine
    container_name: reciprocal-redis-dev
    command: redis-server --appendonly yes --loglevel verbose
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    networks:
      reciprocal-clubs-dev:
        ipv4_address: 172.20.0.11
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  nats:
    image: nats:2.10-alpine
    container_name: reciprocal-nats-dev
    ports:
      - "4222:4222"
      - "6222:6222"
      - "8222:8222"
    command: >
      --js
      --sd /data
      --cluster_name reciprocal-clubs-dev
      --cluster nats://0.0.0.0:6222
      --routes nats://0.0.0.0:6222
      --http_port 8222
      --debug
    volumes:
      - nats_data_dev:/data
    networks:
      reciprocal-clubs-dev:
        ipv4_address: 172.20.0.12
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8222/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # =======================================================================
  # Hyperledger Fabric Components (Development)
  # =======================================================================

  fabric-ca:
    image: hyperledger/fabric-ca:1.5
    container_name: reciprocal-fabric-ca-dev
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-org1-dev
      - FABRIC_CA_SERVER_TLS_ENABLED=false
      - FABRIC_CA_SERVER_PORT=7054
      - FABRIC_CA_SERVER_DEBUG=true
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d'
    volumes:
      - fabric_ca_dev:/etc/hyperledger/fabric-ca-server
    networks:
      reciprocal-clubs-dev:
        ipv4_address: 172.20.0.20
    restart: unless-stopped

  fabric-orderer:
    image: hyperledger/fabric-orderer:2.5
    container_name: reciprocal-orderer-dev
    environment:
      - FABRIC_LOGGING_SPEC=DEBUG
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      - ORDERER_GENERAL_TLS_ENABLED=false
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
      - fabric_orderer_dev:/var/hyperledger/production/orderer
    ports:
      - "7050:7050"
    networks:
      reciprocal-clubs-dev:
        ipv4_address: 172.20.0.21
    depends_on:
      - fabric-ca
    restart: unless-stopped

  fabric-peer:
    image: hyperledger/fabric-peer:2.5
    container_name: reciprocal-peer0-org1-dev
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=reciprocal-clubs-backend_reciprocal-clubs-dev
      - FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_TLS_ENABLED=false
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_ID=peer0.org1.reciprocal-clubs-dev.com
      - CORE_PEER_ADDRESS=peer0.org1.reciprocal-clubs-dev.com:7051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_CHAINCODEADDRESS=peer0.org1.reciprocal-clubs-dev.com:7052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org1.reciprocal-clubs-dev.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org1.reciprocal-clubs-dev.com:7051
      - CORE_PEER_LOCALMSPID=Org1MSP
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - fabric_peer_dev:/var/hyperledger/production
    ports:
      - "7051:7051"
      - "7052:7052"
    networks:
      reciprocal-clubs-dev:
        ipv4_address: 172.20.0.22
    depends_on:
      - fabric-orderer
    restart: unless-stopped

  # =======================================================================
  # Authentication Services
  # =======================================================================

  # Hanko PostgreSQL Database
  hanko-postgres:
    image: postgres:15-alpine
    container_name: reciprocal-hanko-postgres-dev
    environment:
      POSTGRES_DB: hanko_dev
      POSTGRES_USER: hanko
      POSTGRES_PASSWORD: hankodevpassword
    volumes:
      - ./volumes/hanko-postgres:/var/lib/postgresql/data
    networks:
      - reciprocal-clubs-dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hanko"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Hanko Migration
  hanko-migrate:
    image: teamhanko/hanko:latest
    container_name: reciprocal-hanko-migrate-dev
    volumes:
      - ./config/hanko/config.dev.yaml:/etc/config/config.yaml
    command: ["migrate", "up", "--config", "/etc/config/config.yaml"]
    depends_on:
      hanko-postgres:
        condition: service_healthy
    networks:
      - reciprocal-clubs-dev
    restart: on-failure

  # Hanko Authentication Service
  hanko:
    image: teamhanko/hanko:latest
    container_name: reciprocal-hanko-dev
    ports:
      - "8000:8000"  # Public API
      - "8001:8001"  # Admin API
    volumes:
      - ./config/hanko/config.dev.yaml:/etc/config/config.yaml
    command: ["serve", "--config", "/etc/config/config.yaml", "all"]
    environment:
      - PASSWORD_ENABLED=true
    networks:
      reciprocal-clubs-dev:
        ipv4_address: 172.20.0.30
    depends_on:
      hanko-migrate:
        condition: service_completed_successfully
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # =======================================================================
  # Application Services
  # =======================================================================

  api-gateway:
    build:
      context: .
      dockerfile: services/api-gateway/Dockerfile
    container_name: reciprocal-api-gateway-dev
    environment:
      - APP_ENV=development
      - API_GATEWAY_SERVICE_PORT=8080
      - API_GATEWAY_SERVICE_GRPC_PORT=9080
      - API_GATEWAY_DATABASE_HOST=postgres
      - API_GATEWAY_DATABASE_PORT=5432
      - API_GATEWAY_DATABASE_USERNAME=postgres
      - API_GATEWAY_DATABASE_PASSWORD=devpassword
      - API_GATEWAY_DATABASE_DATABASE=reciprocal_clubs_dev
      - API_GATEWAY_NATS_URL=nats://nats:4222
      - API_GATEWAY_REDIS_HOST=redis
      - API_GATEWAY_REDIS_PORT=6379
      - API_GATEWAY_AUTH_JWT_SECRET=development-secret-key-change-in-production
      - API_GATEWAY_CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8080
      - API_GATEWAY_DEBUG=true
      - API_GATEWAY_LOG_LEVEL=debug
    ports:
      - "8080:8080"
      - "9080:9080"
    volumes:
      - ./config/dev:/app/config
      - ./logs/api-gateway:/app/logs
    networks:
      reciprocal-clubs-dev:
        ipv4_address: 172.20.0.100
    depends_on:
      postgres:
        condition: service_healthy
      nats:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  auth-service:
    build:
      context: .
      dockerfile: services/auth-service/Dockerfile
    container_name: reciprocal-auth-service-dev
    environment:
      - APP_ENV=development
      - AUTH_SERVICE_SERVICE_PORT=8081
      - AUTH_SERVICE_SERVICE_GRPC_PORT=9081
      - AUTH_SERVICE_DATABASE_HOST=postgres
      - AUTH_SERVICE_DATABASE_PORT=5432
      - AUTH_SERVICE_DATABASE_USERNAME=postgres
      - AUTH_SERVICE_DATABASE_PASSWORD=devpassword
      - AUTH_SERVICE_DATABASE_DATABASE=auth_service
      - AUTH_SERVICE_NATS_URL=nats://nats:4222
      - AUTH_SERVICE_REDIS_HOST=redis
      - AUTH_SERVICE_REDIS_PORT=6379
      - AUTH_SERVICE_AUTH_JWT_SECRET=development-secret-key-change-in-production
      - AUTH_SERVICE_HANKO_BASE_URL=http://hanko:8000
      - AUTH_SERVICE_HANKO_API_KEY=
      - AUTH_SERVICE_MFA_ISSUER=Reciprocal Clubs Dev
      - AUTH_SERVICE_DEBUG=true
      - AUTH_SERVICE_LOG_LEVEL=debug
    ports:
      - "8081:8081"
      - "9081:9081"
    volumes:
      - ./config/dev:/app/config
      - ./logs/auth-service:/app/logs
    networks:
      reciprocal-clubs-dev:
        ipv4_address: 172.20.0.101
    depends_on:
      postgres:
        condition: service_healthy
      nats:
        condition: service_healthy
      redis:
        condition: service_healthy
      hanko:
        condition: service_healthy
    restart: unless-stopped

  member-service:
    build:
      context: .
      dockerfile: services/member-service/Dockerfile
    container_name: reciprocal-member-service-dev
    environment:
      - APP_ENV=development
      - MEMBER_SERVICE_SERVICE_PORT=8082
      - MEMBER_SERVICE_SERVICE_GRPC_PORT=9082
      - MEMBER_SERVICE_DATABASE_HOST=postgres
      - MEMBER_SERVICE_DATABASE_PORT=5432
      - MEMBER_SERVICE_DATABASE_USERNAME=postgres
      - MEMBER_SERVICE_DATABASE_PASSWORD=devpassword
      - MEMBER_SERVICE_DATABASE_DATABASE=member_service
      - MEMBER_SERVICE_NATS_URL=nats://nats:4222
      - MEMBER_SERVICE_REDIS_HOST=redis
      - MEMBER_SERVICE_REDIS_PORT=6379
      - MEMBER_SERVICE_DEBUG=true
      - MEMBER_SERVICE_LOG_LEVEL=debug
    ports:
      - "8082:8082"
      - "9082:9082"
    volumes:
      - ./config/dev:/app/config
      - ./logs/member-service:/app/logs
    networks:
      reciprocal-clubs-dev:
        ipv4_address: 172.20.0.102
    depends_on:
      postgres:
        condition: service_healthy
      nats:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  reciprocal-service:
    build:
      context: .
      dockerfile: services/reciprocal-service/Dockerfile
    container_name: reciprocal-reciprocal-service-dev
    environment:
      - APP_ENV=development
      - RECIPROCAL_SERVICE_SERVICE_PORT=8083
      - RECIPROCAL_SERVICE_SERVICE_GRPC_PORT=9083
      - RECIPROCAL_SERVICE_DATABASE_HOST=postgres
      - RECIPROCAL_SERVICE_DATABASE_PORT=5432
      - RECIPROCAL_SERVICE_DATABASE_USERNAME=postgres
      - RECIPROCAL_SERVICE_DATABASE_PASSWORD=devpassword
      - RECIPROCAL_SERVICE_DATABASE_DATABASE=reciprocal_service
      - RECIPROCAL_SERVICE_NATS_URL=nats://nats:4222
      - RECIPROCAL_SERVICE_BLOCKCHAIN_PEER_ENDPOINT=fabric-peer:7051
      - RECIPROCAL_SERVICE_BLOCKCHAIN_ORDERER_ENDPOINT=fabric-orderer:7050
      - RECIPROCAL_SERVICE_DEBUG=true
      - RECIPROCAL_SERVICE_LOG_LEVEL=debug
    ports:
      - "8083:8083"
      - "9083:9083"
    volumes:
      - ./config/dev:/app/config
      - ./logs/reciprocal-service:/app/logs
    networks:
      reciprocal-clubs-dev:
        ipv4_address: 172.20.0.103
    depends_on:
      postgres:
        condition: service_healthy
      nats:
        condition: service_healthy
      fabric-peer:
        condition: service_started
    restart: unless-stopped

  blockchain-service:
    build:
      context: .
      dockerfile: services/blockchain-service/Dockerfile
    container_name: reciprocal-blockchain-service-dev
    environment:
      - APP_ENV=development
      - BLOCKCHAIN_SERVICE_SERVICE_PORT=8084
      - BLOCKCHAIN_SERVICE_SERVICE_GRPC_PORT=9084
      - BLOCKCHAIN_SERVICE_DATABASE_HOST=postgres
      - BLOCKCHAIN_SERVICE_DATABASE_PORT=5432
      - BLOCKCHAIN_SERVICE_DATABASE_USERNAME=postgres
      - BLOCKCHAIN_SERVICE_DATABASE_PASSWORD=devpassword
      - BLOCKCHAIN_SERVICE_DATABASE_DATABASE=blockchain_service
      - BLOCKCHAIN_SERVICE_NATS_URL=nats://nats:4222
      - BLOCKCHAIN_SERVICE_BLOCKCHAIN_PEER_ENDPOINT=fabric-peer:7051
      - BLOCKCHAIN_SERVICE_BLOCKCHAIN_ORDERER_ENDPOINT=fabric-orderer:7050
      - BLOCKCHAIN_SERVICE_BLOCKCHAIN_CA_ENDPOINT=fabric-ca:7054
      - BLOCKCHAIN_SERVICE_DEBUG=true
      - BLOCKCHAIN_SERVICE_LOG_LEVEL=debug
    ports:
      - "8084:8084"
      - "9084:9084"
    volumes:
      - ./config/dev:/app/config
      - ./logs/blockchain-service:/app/logs
    networks:
      reciprocal-clubs-dev:
        ipv4_address: 172.20.0.104
    depends_on:
      postgres:
        condition: service_healthy
      nats:
        condition: service_healthy
      fabric-peer:
        condition: service_started
      fabric-ca:
        condition: service_started
    restart: unless-stopped

  notification-service:
    build:
      context: .
      dockerfile: services/notification-service/Dockerfile
    container_name: reciprocal-notification-service-dev
    environment:
      - APP_ENV=development
      - NOTIFICATION_SERVICE_SERVICE_PORT=8085
      - NOTIFICATION_SERVICE_SERVICE_GRPC_PORT=9085
      - NOTIFICATION_SERVICE_DATABASE_HOST=postgres
      - NOTIFICATION_SERVICE_DATABASE_PORT=5432
      - NOTIFICATION_SERVICE_DATABASE_USERNAME=postgres
      - NOTIFICATION_SERVICE_DATABASE_PASSWORD=devpassword
      - NOTIFICATION_SERVICE_DATABASE_DATABASE=notification_service
      - NOTIFICATION_SERVICE_NATS_URL=nats://nats:4222
      - NOTIFICATION_SERVICE_REDIS_HOST=redis
      - NOTIFICATION_SERVICE_REDIS_PORT=6379
      - NOTIFICATION_SERVICE_SMTP_HOST=mailhog
      - NOTIFICATION_SERVICE_SMTP_PORT=1025
      - NOTIFICATION_SERVICE_DEBUG=true
      - NOTIFICATION_SERVICE_LOG_LEVEL=debug
    ports:
      - "8085:8085"
      - "9085:9085"
    volumes:
      - ./config/dev:/app/config
      - ./logs/notification-service:/app/logs
    networks:
      reciprocal-clubs-dev:
        ipv4_address: 172.20.0.105
    depends_on:
      postgres:
        condition: service_healthy
      nats:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  analytics-service:
    build:
      context: .
      dockerfile: services/analytics-service/Dockerfile
    container_name: reciprocal-analytics-service-dev
    environment:
      - APP_ENV=development
      - ANALYTICS_SERVICE_SERVICE_PORT=8086
      - ANALYTICS_SERVICE_SERVICE_GRPC_PORT=9086
      - ANALYTICS_SERVICE_DATABASE_HOST=postgres
      - ANALYTICS_SERVICE_DATABASE_PORT=5432
      - ANALYTICS_SERVICE_DATABASE_USERNAME=postgres
      - ANALYTICS_SERVICE_DATABASE_PASSWORD=devpassword
      - ANALYTICS_SERVICE_DATABASE_DATABASE=analytics_service
      - ANALYTICS_SERVICE_NATS_URL=nats://nats:4222
      - ANALYTICS_SERVICE_REDIS_HOST=redis
      - ANALYTICS_SERVICE_REDIS_PORT=6379
      - ANALYTICS_SERVICE_DEBUG=true
      - ANALYTICS_SERVICE_LOG_LEVEL=debug
    ports:
      - "8086:8086"
      - "9086:9086"
    volumes:
      - ./config/dev:/app/config
      - ./logs/analytics-service:/app/logs
    networks:
      reciprocal-clubs-dev:
        ipv4_address: 172.20.0.106
    depends_on:
      postgres:
        condition: service_healthy
      nats:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  governance-service:
    build:
      context: .
      dockerfile: services/governance-service/Dockerfile
    container_name: reciprocal-governance-service-dev
    environment:
      - APP_ENV=development
      - GOVERNANCE_SERVICE_SERVICE_PORT=8087
      - GOVERNANCE_SERVICE_SERVICE_GRPC_PORT=9087
      - GOVERNANCE_SERVICE_DATABASE_HOST=postgres
      - GOVERNANCE_SERVICE_DATABASE_PORT=5432
      - GOVERNANCE_SERVICE_DATABASE_USERNAME=postgres
      - GOVERNANCE_SERVICE_DATABASE_PASSWORD=devpassword
      - GOVERNANCE_SERVICE_DATABASE_DATABASE=governance_service
      - GOVERNANCE_SERVICE_NATS_URL=nats://nats:4222
      - GOVERNANCE_SERVICE_BLOCKCHAIN_PEER_ENDPOINT=fabric-peer:7051
      - GOVERNANCE_SERVICE_BLOCKCHAIN_ORDERER_ENDPOINT=fabric-orderer:7050
      - GOVERNANCE_SERVICE_DEBUG=true
      - GOVERNANCE_SERVICE_LOG_LEVEL=debug
    ports:
      - "8087:8087"
      - "9087:9087"
    volumes:
      - ./config/dev:/app/config
      - ./logs/governance-service:/app/logs
    networks:
      reciprocal-clubs-dev:
        ipv4_address: 172.20.0.107
    depends_on:
      postgres:
        condition: service_healthy
      nats:
        condition: service_healthy
      fabric-peer:
        condition: service_started
    restart: unless-stopped

  # =======================================================================
  # Development and Testing Tools
  # =======================================================================

  mailhog:
    image: mailhog/mailhog
    container_name: reciprocal-mailhog-dev
    ports:
      - "8025:8025"  # Web UI
      - "1025:1025"  # SMTP
    networks:
      reciprocal-clubs-dev:
        ipv4_address: 172.20.0.200
    restart: unless-stopped

  # =======================================================================
  # Monitoring and Observability
  # =======================================================================

  prometheus:
    image: prom/prometheus:latest
    container_name: reciprocal-prometheus-dev
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.dev.yml:/etc/prometheus/prometheus.yml
      - prometheus_data_dev:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
      - '--log.level=debug'
    networks:
      reciprocal-clubs-dev:
        ipv4_address: 172.20.0.210
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: reciprocal-grafana-dev
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=devpassword
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana_data_dev:/var/lib/grafana
      - ./monitoring/grafana/dev/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/dev/datasources:/etc/grafana/provisioning/datasources
    networks:
      reciprocal-clubs-dev:
        ipv4_address: 172.20.0.211
    depends_on:
      - prometheus
    restart: unless-stopped

  jaeger:
    image: jaegertracing/all-in-one:1.50
    container_name: reciprocal-jaeger-dev
    ports:
      - "16686:16686"  # Web UI
      - "14268:14268"  # HTTP collector
      - "6831:6831/udp"  # UDP collector
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - LOG_LEVEL=debug
    networks:
      reciprocal-clubs-dev:
        ipv4_address: 172.20.0.212
    restart: unless-stopped