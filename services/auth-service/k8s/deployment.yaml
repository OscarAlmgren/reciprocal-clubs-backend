apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: auth-service
  labels:
    app.kubernetes.io/name: auth-service
    app.kubernetes.io/component: application
    app.kubernetes.io/part-of: reciprocal-clubs
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: auth-service
      app.kubernetes.io/component: application
  template:
    metadata:
      labels:
        app.kubernetes.io/name: auth-service
        app.kubernetes.io/component: application
        app.kubernetes.io/part-of: reciprocal-clubs
        app.kubernetes.io/version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: auth-service
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: auth-service
        image: auth-service:1.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: grpc
          containerPort: 8081
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        # Configuration override via environment variables
        - name: AUTH_SERVICE_SERVER_ENVIRONMENT
          value: "production"
        - name: AUTH_SERVICE_DATABASE_HOST
          value: "auth-service-postgres"
        - name: AUTH_SERVICE_DATABASE_USERNAME
          value: "postgres"
        - name: AUTH_SERVICE_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: auth-service-secrets
              key: DATABASE_PASSWORD
        - name: AUTH_SERVICE_AUTH_TOKEN_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: auth-service-secrets
              key: AUTH_TOKEN_SECRET_KEY
        - name: AUTH_SERVICE_HANKO_API_KEY
          valueFrom:
            secretKeyRef:
              name: auth-service-secrets
              key: HANKO_API_KEY
        - name: AUTH_SERVICE_HANKO_PROJECT_ID
          valueFrom:
            secretKeyRef:
              name: auth-service-secrets
              key: HANKO_PROJECT_ID
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30
        volumeMounts:
        - name: config
          mountPath: /app/config.yaml
          subPath: config.yaml
          readOnly: true
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: config
        configMap:
          name: auth-service-config
      terminationGracePeriodSeconds: 30
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - auth-service
              topologyKey: kubernetes.io/hostname