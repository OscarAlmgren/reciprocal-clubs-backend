# =========================================================================
# Docker Stack - Production Swarm Deployment
# =========================================================================
# This configuration is optimized for Docker Swarm production deployment with:
# - High availability and fault tolerance
# - Auto-scaling and load balancing
# - Rolling updates with zero downtime
# - Advanced placement constraints
# - Production-grade secrets and configs
# - Cross-node networking and storage

version: '3.8'

networks:
  reciprocal-clubs-overlay:
    driver: overlay
    attachable: true
    ipam:
      config:
        - subnet: 10.0.0.0/16
  reciprocal-clubs-internal:
    driver: overlay
    internal: true
    ipam:
      config:
        - subnet: 10.1.0.0/16

volumes:
  postgres_data_swarm:
    driver: local
  postgres_backup_swarm:
    driver: local
  nats_data_swarm:
    driver: local
  redis_data_swarm:
    driver: local
  prometheus_data_swarm:
    driver: local
  grafana_data_swarm:
    driver: local

secrets:
  postgres_password:
    external: true
  redis_password:
    external: true
  jwt_secret:
    external: true
  hanko_api_key:
    external: true
  smtp_password:
    external: true
  grafana_password:
    external: true

configs:
  nginx_config:
    external: true
  prometheus_config:
    external: true
  grafana_datasources:
    external: true

services:
  # =======================================================================
  # Infrastructure Services
  # =======================================================================

  postgres:
    image: postgres:15-alpine
    secrets:
      - postgres_password
    environment:
      POSTGRES_DB: reciprocal_clubs_swarm
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
    volumes:
      - postgres_data_swarm:/var/lib/postgresql/data
      - postgres_backup_swarm:/backup
    networks:
      - reciprocal-clubs-internal
    ports:
      - target: 5432
        published: 5432
        protocol: tcp
        mode: host
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
          - node.labels.postgres == true
      restart_policy:
        condition: any
        delay: 10s
        max_attempts: 5
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 2G
      update_config:
        parallelism: 1
        delay: 30s
        failure_action: rollback
        order: stop-first

  redis:
    image: redis:7-alpine
    secrets:
      - redis_password
    command: >
      redis-server
      --appendonly yes
      --requirepass "$(cat /run/secrets/redis_password)"
      --maxmemory 2gb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
    volumes:
      - redis_data_swarm:/data
    networks:
      - reciprocal-clubs-internal
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "$(cat /run/secrets/redis_password)", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G

  nats:
    image: nats:2.10-alpine
    command: >
      --js
      --sd /data
      --cluster_name reciprocal-clubs-swarm
      --cluster nats://0.0.0.0:6222
      --routes nats://nats:6222
      --http_port 8222
      --max_payload 8MB
      --max_connections 1000
    volumes:
      - nats_data_swarm:/data
    networks:
      - reciprocal-clubs-internal
    ports:
      - target: 4222
        published: 4222
        protocol: tcp
        mode: ingress
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8222/healthz"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      replicas: 3
      placement:
        max_replicas_per_node: 1
      restart_policy:
        condition: any
        delay: 5s
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  # =======================================================================
  # Authentication Services
  # =======================================================================

  hanko:
    image: teamhanko/hanko:latest
    configs:
      - source: hanko_config
        target: /etc/config/config.yaml
    command: ["serve", "--config", "/etc/config/config.yaml", "all"]
    environment:
      - PASSWORD_ENABLED=true
    networks:
      - reciprocal-clubs-internal
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      replicas: 2
      placement:
        max_replicas_per_node: 1
      restart_policy:
        condition: any
        delay: 10s
      resources:
        limits:
          cpus: '1.0'
          memory: 1G

  # =======================================================================
  # Application Services
  # =======================================================================

  api-gateway:
    image: reciprocal-clubs/api-gateway:latest
    secrets:
      - postgres_password
      - jwt_secret
    environment:
      - APP_ENV=production
      - API_GATEWAY_SERVICE_PORT=8080
      - API_GATEWAY_SERVICE_GRPC_PORT=9080
      - API_GATEWAY_DATABASE_HOST=postgres
      - API_GATEWAY_DATABASE_PASSWORD_FILE=/run/secrets/postgres_password
      - API_GATEWAY_DATABASE_DATABASE=reciprocal_clubs_swarm
      - API_GATEWAY_NATS_URL=nats://nats:4222
      - API_GATEWAY_REDIS_HOST=redis
      - API_GATEWAY_AUTH_JWT_SECRET_FILE=/run/secrets/jwt_secret
      - API_GATEWAY_CORS_ALLOWED_ORIGINS=https://app.reciprocal-clubs.com
    networks:
      - reciprocal-clubs-overlay
      - reciprocal-clubs-internal
    ports:
      - target: 8080
        published: 8080
        protocol: tcp
        mode: ingress
    deploy:
      replicas: 4
      placement:
        max_replicas_per_node: 2
      restart_policy:
        condition: any
        delay: 5s
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
      update_config:
        parallelism: 1
        delay: 30s
        failure_action: rollback
        order: start-first
      rollback_config:
        parallelism: 1
        delay: 30s

  auth-service:
    image: reciprocal-clubs/auth-service:latest
    secrets:
      - postgres_password
      - jwt_secret
      - hanko_api_key
    environment:
      - APP_ENV=production
      - AUTH_SERVICE_SERVICE_PORT=8081
      - AUTH_SERVICE_SERVICE_GRPC_PORT=9081
      - AUTH_SERVICE_DATABASE_HOST=postgres
      - AUTH_SERVICE_DATABASE_PASSWORD_FILE=/run/secrets/postgres_password
      - AUTH_SERVICE_DATABASE_DATABASE=auth_service
      - AUTH_SERVICE_NATS_URL=nats://nats:4222
      - AUTH_SERVICE_REDIS_HOST=redis
      - AUTH_SERVICE_AUTH_JWT_SECRET_FILE=/run/secrets/jwt_secret
      - AUTH_SERVICE_HANKO_BASE_URL=http://hanko:8000
      - AUTH_SERVICE_HANKO_API_KEY_FILE=/run/secrets/hanko_api_key
      - AUTH_SERVICE_MFA_ISSUER=Reciprocal Clubs
    networks:
      - reciprocal-clubs-internal
    deploy:
      replicas: 3
      placement:
        max_replicas_per_node: 2
      restart_policy:
        condition: any
        delay: 5s
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
      update_config:
        parallelism: 1
        delay: 30s
        failure_action: rollback

  member-service:
    image: reciprocal-clubs/member-service:latest
    secrets:
      - postgres_password
    environment:
      - APP_ENV=production
      - MEMBER_SERVICE_SERVICE_PORT=8082
      - MEMBER_SERVICE_SERVICE_GRPC_PORT=9082
      - MEMBER_SERVICE_DATABASE_HOST=postgres
      - MEMBER_SERVICE_DATABASE_PASSWORD_FILE=/run/secrets/postgres_password
      - MEMBER_SERVICE_DATABASE_DATABASE=member_service
      - MEMBER_SERVICE_NATS_URL=nats://nats:4222
      - MEMBER_SERVICE_REDIS_HOST=redis
    networks:
      - reciprocal-clubs-internal
    deploy:
      replicas: 3
      placement:
        max_replicas_per_node: 2
      restart_policy:
        condition: any
        delay: 5s
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  reciprocal-service:
    image: reciprocal-clubs/reciprocal-service:latest
    secrets:
      - postgres_password
    environment:
      - APP_ENV=production
      - RECIPROCAL_SERVICE_SERVICE_PORT=8083
      - RECIPROCAL_SERVICE_SERVICE_GRPC_PORT=9083
      - RECIPROCAL_SERVICE_DATABASE_HOST=postgres
      - RECIPROCAL_SERVICE_DATABASE_PASSWORD_FILE=/run/secrets/postgres_password
      - RECIPROCAL_SERVICE_DATABASE_DATABASE=reciprocal_service
      - RECIPROCAL_SERVICE_NATS_URL=nats://nats:4222
    networks:
      - reciprocal-clubs-internal
    deploy:
      replicas: 3
      placement:
        max_replicas_per_node: 2
      restart_policy:
        condition: any
        delay: 5s
      resources:
        limits:
          cpus: '1.0'
          memory: 1G

  blockchain-service:
    image: reciprocal-clubs/blockchain-service:latest
    secrets:
      - postgres_password
    environment:
      - APP_ENV=production
      - BLOCKCHAIN_SERVICE_SERVICE_PORT=8084
      - BLOCKCHAIN_SERVICE_SERVICE_GRPC_PORT=9084
      - BLOCKCHAIN_SERVICE_DATABASE_HOST=postgres
      - BLOCKCHAIN_SERVICE_DATABASE_PASSWORD_FILE=/run/secrets/postgres_password
      - BLOCKCHAIN_SERVICE_DATABASE_DATABASE=blockchain_service
      - BLOCKCHAIN_SERVICE_NATS_URL=nats://nats:4222
    networks:
      - reciprocal-clubs-internal
    deploy:
      replicas: 2
      placement:
        max_replicas_per_node: 1
      restart_policy:
        condition: any
        delay: 5s
      resources:
        limits:
          cpus: '1.0'
          memory: 1G

  notification-service:
    image: reciprocal-clubs/notification-service:latest
    secrets:
      - postgres_password
      - smtp_password
    environment:
      - APP_ENV=production
      - NOTIFICATION_SERVICE_SERVICE_PORT=8085
      - NOTIFICATION_SERVICE_SERVICE_GRPC_PORT=9085
      - NOTIFICATION_SERVICE_DATABASE_HOST=postgres
      - NOTIFICATION_SERVICE_DATABASE_PASSWORD_FILE=/run/secrets/postgres_password
      - NOTIFICATION_SERVICE_DATABASE_DATABASE=notification_service
      - NOTIFICATION_SERVICE_NATS_URL=nats://nats:4222
      - NOTIFICATION_SERVICE_REDIS_HOST=redis
      - NOTIFICATION_SERVICE_SMTP_PASSWORD_FILE=/run/secrets/smtp_password
    networks:
      - reciprocal-clubs-internal
    deploy:
      replicas: 3
      placement:
        max_replicas_per_node: 2
      restart_policy:
        condition: any
        delay: 5s
      resources:
        limits:
          cpus: '1.0'
          memory: 1G

  analytics-service:
    image: reciprocal-clubs/analytics-service:latest
    secrets:
      - postgres_password
    environment:
      - APP_ENV=production
      - ANALYTICS_SERVICE_SERVICE_PORT=8086
      - ANALYTICS_SERVICE_SERVICE_GRPC_PORT=9086
      - ANALYTICS_SERVICE_DATABASE_HOST=postgres
      - ANALYTICS_SERVICE_DATABASE_PASSWORD_FILE=/run/secrets/postgres_password
      - ANALYTICS_SERVICE_DATABASE_DATABASE=analytics_service
      - ANALYTICS_SERVICE_NATS_URL=nats://nats:4222
      - ANALYTICS_SERVICE_REDIS_HOST=redis
    networks:
      - reciprocal-clubs-internal
    deploy:
      replicas: 3
      placement:
        max_replicas_per_node: 2
      restart_policy:
        condition: any
        delay: 5s
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '1.0'
          memory: 1G

  governance-service:
    image: reciprocal-clubs/governance-service:latest
    secrets:
      - postgres_password
    environment:
      - APP_ENV=production
      - GOVERNANCE_SERVICE_SERVICE_PORT=8087
      - GOVERNANCE_SERVICE_SERVICE_GRPC_PORT=9087
      - GOVERNANCE_SERVICE_DATABASE_HOST=postgres
      - GOVERNANCE_SERVICE_DATABASE_PASSWORD_FILE=/run/secrets/postgres_password
      - GOVERNANCE_SERVICE_DATABASE_DATABASE=governance_service
      - GOVERNANCE_SERVICE_NATS_URL=nats://nats:4222
    networks:
      - reciprocal-clubs-internal
    deploy:
      replicas: 2
      placement:
        max_replicas_per_node: 1
      restart_policy:
        condition: any
        delay: 5s
      resources:
        limits:
          cpus: '1.0'
          memory: 1G

  # =======================================================================
  # Monitoring and Observability
  # =======================================================================

  prometheus:
    image: prom/prometheus:latest
    configs:
      - source: prometheus_config
        target: /etc/prometheus/prometheus.yml
    volumes:
      - prometheus_data_swarm:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - reciprocal-clubs-internal
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: any
        delay: 30s
      resources:
        limits:
          cpus: '1.0'
          memory: 2G

  grafana:
    image: grafana/grafana:latest
    secrets:
      - grafana_password
    configs:
      - source: grafana_datasources
        target: /etc/grafana/provisioning/datasources/datasources.yml
    environment:
      - GF_SECURITY_ADMIN_PASSWORD_FILE=/run/secrets/grafana_password
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_AUTH_ANONYMOUS_ENABLED=false
    volumes:
      - grafana_data_swarm:/var/lib/grafana
    networks:
      - reciprocal-clubs-internal
      - reciprocal-clubs-overlay
    ports:
      - target: 3000
        published: 3000
        protocol: tcp
        mode: ingress
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: any
        delay: 30s
      resources:
        limits:
          cpus: '0.5'
          memory: 1G

  # =======================================================================
  # Load Balancer and Ingress
  # =======================================================================

  nginx:
    image: nginx:alpine
    configs:
      - source: nginx_config
        target: /etc/nginx/nginx.conf
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: ingress
      - target: 443
        published: 443
        protocol: tcp
        mode: ingress
    networks:
      - reciprocal-clubs-overlay
    deploy:
      replicas: 2
      placement:
        max_replicas_per_node: 1
        constraints:
          - node.labels.frontend == true
      restart_policy:
        condition: any
        delay: 5s
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
      update_config:
        parallelism: 1
        delay: 30s
        failure_action: rollback