# =========================================================================
# Kubernetes Development Secrets
# =========================================================================
# NOTE: These are development secrets only - DO NOT use in production!

apiVersion: v1
kind: Secret
metadata:
  name: reciprocal-clubs-dev-secrets
  namespace: reciprocal-clubs-dev
  labels:
    app: reciprocal-clubs
    environment: development
type: Opaque
data:
  # Base64 encoded development secrets
  # postgres-password: "devpassword"
  postgres-password: ZGV2cGFzc3dvcmQ=

  # redis-password: "devredispass"
  redis-password: ZGV2cmVkaXNwYXNz

  # jwt-secret: "development-jwt-secret-key-minimum-32-characters-long-for-security"
  jwt-secret: ZGV2ZWxvcG1lbnQtand0LXNlY3JldC1rZXktbWluaW11bS0zMi1jaGFyYWN0ZXJzLWxvbmctZm9yLXNlY3VyaXR5

  # hanko-api-key: "" (empty for development)
  hanko-api-key: ""

  # smtp-password: "devsmtppass" (for MailHog)
  smtp-password: ZGV2c210cHBhc3M=

---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-dev-secrets
  namespace: reciprocal-clubs-dev
  labels:
    app: postgres
    environment: development
type: Opaque
data:
  # postgres-password: "devpassword"
  POSTGRES_PASSWORD: ZGV2cGFzc3dvcmQ=

  # postgres-user: "postgres"
  POSTGRES_USER: cG9zdGdyZXM=

---
apiVersion: v1
kind: Secret
metadata:
  name: hanko-postgres-dev-secrets
  namespace: reciprocal-clubs-dev
  labels:
    app: hanko-postgres
    environment: development
type: Opaque
data:
  # hanko postgres password: "hankodevpassword"
  POSTGRES_PASSWORD: aGFua29kZXZwYXNzd29yZA==

  # hanko postgres user: "hanko"
  POSTGRES_USER: aGFua28=

---
# TLS Secret for development (self-signed)
apiVersion: v1
kind: Secret
metadata:
  name: tls-dev-secret
  namespace: reciprocal-clubs-dev
  labels:
    app: reciprocal-clubs
    environment: development
type: kubernetes.io/tls
data:
  # Self-signed certificate for *.reciprocal-clubs.local
  # Generated with: openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout tls.key -out tls.crt -subj "/CN=*.reciprocal-clubs.local"
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFVENDQWZtZ0F3SUJBZ0lKQUt5Y0V6UXB6VGdITUEwR0NTcUdTSWIzRFFFQkN3VUFNQlV4RXpBUkJnTlYKQkFNTUNtUmxkaTVzYjJOaGJEQWVGdzB5TkRBNU1Ea3dOekEwTkRWYUZ3MHlOVEE1TURrd056QTBORFZBTUJVWAPFGRQQVFCZ00tLS0tCkVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRRE14L2I4Z2VnZWlkTjcKaG1YWnlLRU1heXV4clU5NktqQjlsS2NCRjMzcGV5NjFqd0pOTkxnVXJnMGFiNnp4SkNJdkNsMUl3cERCNWdJbQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0t

---
# Image Pull Secret (if using private registry)
apiVersion: v1
kind: Secret
metadata:
  name: reciprocal-clubs-registry-secret
  namespace: reciprocal-clubs-dev
  labels:
    app: reciprocal-clubs
    environment: development
type: kubernetes.io/dockerconfigjson
data:
  # Empty for development - using public images or local builds
  .dockerconfigjson: eyJhdXRocyI6e319